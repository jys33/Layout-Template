<section style="width: 100%;max-width: 380px;margin: auto;padding: 0.625rem;">
    <h1 class="mb-4 text-center text-crimson">Restablecer contraseña</h1>
    <form class="needs-validation" method="POST">
        <div class="form-group">
            <small id="passwordHelpBlock" class="form-text text-muted mb-4">Elija una nueva contraseña y nosotros nos encargaremos del resto.</small>
            <label for="password">Nueva contraseña</label>
            <input class="form-control <?= empty($password_err) ? '' : 'is-invalid' ?>" type="password" name="password" id="password" autocomplete="off" maxlength="50" value="" aria-describedby="passwordHelpBlock"/>
            <div class="invalid-feedback"><?= htmlspecialchars($password_err) ?></div>
        </div>
        <div class="form-group mb-4">
            <label for="confirm_password">Confirmar nueva contraseña</label>
            <input class="form-control <?= empty($confirm_password_err) ? '' : 'is-invalid' ?>" type="password" name="confirm_password" id="confirm_password" autocomplete="off" maxlength="50" value=""/>
            <div class="invalid-feedback"><?= htmlspecialchars($confirm_password_err) ?></div>
        </div>
        <input type="hidden" name="id" value="<?= $id ?>" readonly onmousedown="return false;">
        <input type="hidden" name="key" value="<?= $key ?>" readonly onmousedown="return false;">
        <button id="btn" type="submit" class="btn btn-primary btn-block btn-lg">Guardar</button>
    </form>
</section>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        let reset_password = new FormValidator('reset_password', [
        {
            name: 'password',
            display: 'contraseña',
            rules: 'required|min_length[8]|max_length[50]'
        }, {
            name: 'confirm_password',
            display: 'confirmar contraseña',
            rules: 'required|matches[password]|max_length[50]'
        }], function(errors, evt) {
            if (errors.length > 0) {
                let N = errors.length;
                for (let i = 0; i < N; i++) {
                    errors[i].element.classList.add('is-invalid');
                    errors[i].element.nextElementSibling.innerHTML = errors[i].message;
                }
                errors[0].element.focus();
                evt.preventDefault();
            } else {
                disabledBtn();
            }
        });
    });
</script>